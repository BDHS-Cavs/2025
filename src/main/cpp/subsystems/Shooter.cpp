// THIS FILE IS FROM 2024 - OUR 2025 CODE WILL PROBABLY NOT KEEP THIS FILE, IT IS JUST TO MAKE PROGRAMMING 2025 EASIER

// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "subsystems/Shooter.h"

#include <frc/smartdashboard/SmartDashboard.h>
#include <wpi/raw_ostream.h> // for wpi outs()


Shooter::Shooter(){
    SetName("Shooter");
    SetSubsystem("Shooter");

    //AddChild("ShooterMotor1", &m_shooterMotor1); //todo
    m_shooterMotor1.SetInverted(true);

    //AddChild("ShooterMotor2", &m_shooterMotor2); //todo
    m_shooterMotor2.SetInverted(false);

    m_shooterMotor1.SetIdleMode(rev::CANSparkBase::IdleMode::kBrake);
    m_shooterMotor2.SetIdleMode(rev::CANSparkBase::IdleMode::kBrake);
}

void Shooter::Periodic() {
    // Put code here to be run every loop
}

void Shooter::SimulationPeriodic() {
}

// Put methods for controlling this subsystem here and call from commands

void Shooter::ShooterShoot(){ 
    // Run Shooter
        m_shooterMotor1.Set(1.0);
        m_shooterMotor2.Set(1.0);
} 

void Shooter::ShooterRetract(){
    // Retract Shooter
        m_shooterMotor1.Set(-1.0);
        m_shooterMotor2.Set(-1.0);
}

void Shooter::ShooterStop(){
    // Stop the Shooter Motors
    m_shooterMotor1.Set(0);
    m_shooterMotor2.Set(0);
}